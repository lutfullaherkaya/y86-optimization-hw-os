                            | # Lutfullah Erkaya
                            | # 2448363
                            | 
                            | # Prepare the stack pointer, the arguments, and call find_max
0x000:                      | .pos 0
0x000: 30f40008000000000000 |     irmovq Stack, %rsp
0x00a: 30f70002000000000000 |     irmovq root, %rdi
0x014: 801e00000000000000   |     call max_bst
0x01d: 00                   |     halt
                            | 
0x01e:                      | max_bst:
0x01e: 6300                 |     xorq %rax, %rax 
0x020: 6277                 |     andq %rdi, %rdi     # if (!root)
0x022: 735500000000000000   |     je root_is_null     #   return
0x02b: 703600000000000000   |     jmp check
                            | 
0x034:                      | loop:
0x034: 2087                 |     rrmovq %r8, %rdi    # root = right
0x036:                      | check:
0x036: 50871000000000000000 |     mrmovq 16(%rdi), %r8    # right = root->right
0x040: 6288                 |     andq %r8, %r8           # if (right)
0x042: 743400000000000000   |     jne loop                #   continue the loop
                            | 
0x04b: 50070000000000000000 |     mrmovq (%rdi), %rax
                            | 
0x055:                      | root_is_null:
0x055: 90                   |     ret
                            | 
                            | # A sample eleven-element BST. Absolutely positioned
                            | # to avoid confusion when debugging.
0x200:                      | .pos 0x200
0x200:                      | root:
0x200: 1100000000000000     |     .quad 17
0x208: 1802000000000000     |     .quad node6
0x210: a802000000000000     |     .quad node24
0x218:                      | node6:
0x218: 0600000000000000     |     .quad 6
0x220: 3002000000000000     |     .quad node4
0x228: 7802000000000000     |     .quad node11
0x230:                      | node4:
0x230: 0400000000000000     |     .quad 4
0x238: 4802000000000000     |     .quad node3
0x240: 6002000000000000     |     .quad node5
0x248:                      | node3:
0x248: 0300000000000000     |     .quad 3
0x250: 0000000000000000     |     .quad 0 
0x258: 0000000000000000     |     .quad 0 
0x260:                      | node5: 
0x260: 0500000000000000     |     .quad 5 
0x268: 0000000000000000     |     .quad 0 # Remember that 0 is null. 
0x270: 0000000000000000     |     .quad 0 
0x278:                      | node11: 
0x278: 0b00000000000000     |     .quad 11 
0x280: 9002000000000000     |     .quad node8 
0x288: 0000000000000000     |     .quad 0 
0x290:                      | node8: 
0x290: 0800000000000000     |     .quad 8 
0x298: 0000000000000000     |     .quad 0 
0x2a0: 0000000000000000     |     .quad 0 
0x2a8:                      | node24: 
0x2a8: 1800000000000000     |     .quad 24 
0x2b0: c002000000000000     |     .quad node19 
0x2b8: d802000000000000     |     .quad node40 
0x2c0:                      | node19: 
0x2c0: 1300000000000000     |     .quad 19 
0x2c8: 0000000000000000     |     .quad 0 
0x2d0: 0000000000000000     |     .quad 0 
0x2d8:                      | node40: 
0x2d8: 2800000000000000     |     .quad 40 
0x2e0: 0000000000000000     |     .quad 0 
0x2e8: f002000000000000     |     .quad node52 
0x2f0:                      | node52: 
0x2f0: 3400000000000000     |     .quad 52 
0x2f8: 0000000000000000     |     .quad 0 
0x300: 0000000000000000     |     .quad 0 
                            | 
                            | # Stack position, byte 0x800 far from data
0x800:                      |     .pos 0x800
0x800:                      | Stack:
